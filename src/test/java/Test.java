import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.List;

public class Test extends Thread {

    public static List<OnlineThread> threadList;
    public static int i = 0;

    public Test(String[] address) throws UnknownHostException {
        threadList = new ArrayList<>();

        for (String string : address) {
            InetSocketAddress socketAddress = new InetSocketAddress(InetAddress.getByName(string), 25565);
            OnlineThread thread = new OnlineThread(socketAddress, i);
            thread.locked = false;
            thread.start();
            threadList.add(thread);
            i++;
        }
    }

    public static void createThread(InetSocketAddress address, int port) {
        OnlineThread thread = new OnlineThread(address, i);
        thread.locked = false;
        thread.current = port;
        thread.start();
        threadList.add(thread);
        i++;
    }

    public static void main(String[] args) throws IOException {
        String str = "94.199.212.249,158.69.120.232,149.56.29.162,213.46.5.152,149.202.78.4,158.69.26.120,128.199.217.159,158.69.122.26,162.224.217.103,62.210.45.5,186.210.207.94,149.56.17.117,142.4.218.75,2001:5b0:4fc1:6390:0:ff:febf:76e9,191.187.160.95,167.114.100.223,149.56.241.15,206.221.190.26,87.205.73.106,158.69.127.176,158.69.127.148,177.42.54.245,23.241.3.137,117.0.214.166,189.5.177.64,149.56.242.80,158.69.124.32,217.129.247.75,149.56.29.140,158.69.117.121,189.41.89.64,186.219.209.138,185.243.155.5,173.90.168.225,107.174.19.150,54.37.63.148,177.83.7.227,131.161.193.6,70.188.251.50,116.111.119.211,186.210.126.247,170.84.156.4,189.209.0.38,46.12.129.13,177.96.33.227,192.223.28.174,186.210.210.37,186.210.112.239,187.127.190.167,116.111.16.15,187.112.74.87,192.99.230.111,192.99.38.169,186.210.111.188,2001:5b0:4fc1:7ba0:0:ff:febf:76e9,130.105.235.129,177.133.39.166,158.69.54.213,186.210.99.157,104.187.121.201,168.181.48.181,158.69.117.125,158.69.127.123,191.249.120.138,158.69.127.148,179.104.219.162,166.137.252.81,158.69.225.26,84.200.149.30,186.214.10.32,188.165.216.115,2001:5b0:4fc0:8f50:0:ff:febf:76e9,120.41.42.29,130.105.235.209,189.41.109.77,144.217.73.213,35.198.19.161,158.69.124.32,177.124.190.86,201.77.125.42,130.105.234.243,177.132.103.40,144.217.73.210,158.69.26.203,179.182.238.193,177.41.250.245,107.77.76.55,189.41.108.174,144.217.73.210,187.108.186.251,177.156.3.85,212.35.185.96,179.83.4.112,186.210.121.200,158.69.127.174,177.156.3.85,179.187.89.163,186.210.123.142,187.108.185.19,107.77.76.79,187.58.36.168,158.69.226.236,186.210.106.69,200.180.179.5,187.38.251.226,158.69.116.80,201.47.178.63,158.69.127.185,179.177.134.178,191.55.8.143,167.114.118.122,144.217.73.215,167.114.65.200,192.99.19.45,176.59.51.251,201.22.177.157,191.55.8.165,201.22.177.157,192.99.233.27,149.56.29.162,177.124.191.164,177.96.55.233,189.41.82.44,85.142.175.11,186.210.199.111,177.6.32.119,179.162.98.110,107.77.70.63,186.210.117.227,35.198.54.93,200.180.180.203,186.210.124.51,69.30.227.26,168.228.180.245,168.228.180.241,177.132.101.0,187.112.249.24,35.203.6.188,158.69.226.220,177.54.158.143,186.203.11.139,187.4.26.126,179.83.6.242,173.249.14.72,179.35.20.17,187.23.175.70,104.41.52.235,186.210.197.64,200.180.180.138,84.144.19.38,177.96.32.21,191.178.201.50,186.210.119.153,189.114.199.37,200.180.179.210,167.114.64.34,186.219.211.2,189.71.230.172,104.243.46.218,192.99.140.224,5.135.18.71,177.96.170.188,189.41.100.121,179.104.220.244,178.33.137.128,192.99.100.126,107.77.70.92,149.56.242.186,189.71.238.66,200.180.179.246,158.69.127.150,149.56.243.56,172.58.70.140,189.41.73.71,187.4.24.214,179.225.230.142,187.4.27.3,46.174.49.30,189.41.98.196,172.56.7.146,187.51.180.2,187.51.180.2,84.144.19.38,200.180.174.226,84.144.27.3,212.35.186.149,172.58.99.195,107.77.106.21,187.4.27.162,84.147.98.48,177.6.35.96,84.147.98.48,189.74.56.166,200.180.173.97,158.69.253.135,51.255.76.240,131.161.192.10,5.196.83.73,212.35.182.95,179.96.191.1,107.77.76.26,149.202.92.149,149.202.70.149,158.69.249.155,193.70.32.35,108.178.18.94,149.202.90.11,179.96.191.17,200.180.179.228,189.35.44.157,185.212.200.194,103.89.85.4,187.4.24.211,188.167.250.172,158.69.124.35,89.203.248.80,173.230.132.170,177.93.67.239,192.99.147.89,151.177.177.113,177.202.51.209,201.20.82.34,149.56.29.162,176.31.103.7,192.99.47.146,187.55.187.72,131.161.195.241,191.187.160.222,177.6.32.220,144.217.73.213,167.114.101.146,104.41.59.149,131.255.109.100,192.99.19.29,192.99.38.156,179.216.93.160,187.4.24.192,37.187.73.87,107.77.106.120,149.202.92.161,192.99.20.204,106.70.13.197,167.114.208.4,192.99.140.224,149.202.92.238,107.77.106.96,107.77.76.93,192.99.150.95,51.255.76.228,144.217.10.218,95.95.19.161,179.238.192.196,158.69.127.105,176.31.123.96,94.130.49.233,192.99.44.160,179.216.86.17,217.129.247.75,192.99.46.107,2605:3e80:1300:0:0:0:0:3b39,89.203.248.22,212.83.177.227,120.41.42.91,212.83.158.177,187.4.25.221,131.255.111.65,131.161.194.56,168.227.53.236,149.56.243.141,192.99.20.176,149.56.29.19,186.219.211.2,167.114.103.101,158.69.26.200,158.69.127.171,149.56.13.11,95.139.161.127,198.27.69.147,91.178.215.24,167.114.208.122,177.93.67.234,177.93.67.233,177.6.35.240,149.56.242.186,176.59.39.85,179.96.191.202,191.187.160.222,187.4.27.93,158.69.116.80,69.60.65.12,176.59.51.30,192.99.20.205,191.187.160.222,167.114.210.236,158.69.26.120,177.103.112.3,176.59.51.127,149.56.243.123,201.79.157.255,138.0.174.129,167.114.118.204,177.6.33.11,131.255.109.66,177.133.147.181,167.114.208.2,54.39.13.86,73.109.126.130,176.59.36.73,69.197.188.90,131.161.193.69,131.161.193.69,177.156.220.6,177.156.220.6,95.139.248.151,68.147.175.89,192.99.200.45,177.156.220.6,158.69.125.151,78.170.123.13,173.244.44.73,5.135.18.71,173.249.14.72,191.249.77.116,191.249.77.116,177.84.89.44,5.135.18.71,177.158.149.246,142.44.143.151,179.181.89.220,179.181.89.220,212.83.158.177,158.69.124.35,144.217.10.218,78.170.123.13,116.31.124.36,149.202.69.132,179.199.148.253,179.181.89.220,179.181.89.220,192.99.140.224,192.99.140.224,78.170.123.13,131.161.195.83,147.197.190.20,177.156.84.67,177.156.84.67,177.156.84.67,2804:7f5:9080:63d3:31b5:ecef:37f:18ee,186.212.244.251,167.114.118.74,149.56.243.51,189.34.227.181,177.1.194.234,191.249.82.4,191.249.82.4,179.186.236.231,179.186.236.231,177.54.156.66,186.251.165.10,144.217.206.117,189.26.154.122,189.26.154.122,189.26.154.122,189.26.154.122,167.114.32.114,167.114.32.114,217.210.148.87,103.58.149.121,189.58.239.2,177.156.218.221,177.156.218.221,149.56.243.104,158.69.124.46,187.120.131.144,189.115.90.133,189.115.90.133,45.4.188.1,104.152.191.193,187.57.104.96,179.113.202.90,177.16.60.31,177.16.60.31,168.227.54.191,168.227.54.210,168.227.54.216,144.217.49.253,168.227.54.156,177.156.6.185,168.227.54.130,177.21.132.63,158.69.123.187,187.112.165.180,177.125.127.39,177.204.197.86,131.161.194.178,201.32.162.244,179.177.201.180,168.227.54.196,168.227.54.134,149.202.90.9,179.216.85.117,116.31.124.11,168.227.54.136,179.216.92.76,177.156.81.40,177.21.129.143,187.120.129.185,115.231.217.111,54.37.237.7,143.202.39.70,177.204.95.162,177.204.95.162,131.161.193.211,185.201.188.30,186.209.104.146,191.177.187.169,144.217.73.214,187.2.67.13,187.120.141.59,187.120.141.59,62.210.232.135,187.112.236.167,179.110.246.142,187.2.70.186,158.69.26.124,187.181.208.174,189.35.44.84,131.161.195.220,189.7.173.187,131.255.111.212,187.2.69.85,179.181.94.31,179.181.94.31,179.217.252.86";
        String[] address = str.split(",");
        Test test = new Test(address);
        test.start();
    }

    public void run() {
        JTable table = new JTable(new Object[threadList.size()][4], new String[]{"ADDRESS", "MAXIMO", "ONLINE", "PING"});
        JFrame frame = new JFrame();
        table.setAutoCreateRowSorter(true);

        frame.setVisible(true);
        frame.setSize(new Dimension(640, 360));

        JScrollPane sp = new JScrollPane(table);
        table.setFillsViewportHeight(true);
        sp.setVisible(true);
        frame.add(sp);

        frame.setLayout(new BorderLayout());
        frame.add(table.getTableHeader(), BorderLayout.PAGE_START);
        frame.add(table, BorderLayout.CENTER);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        while (true) {
            try {
                sleep(10);


                int i = 0;
                for (OnlineThread thread : threadList) {
                    if (thread.getData()[1].equals("NOT") || thread.getData()[1].contains("0")) continue;
                    i++;
                    table.setValueAt(thread.getAddress(), i, 0);
                    table.setValueAt(thread.getData()[0], i, 1);
                    table.setValueAt(thread.getData()[1], i, 2);
                    table.setValueAt(thread.getData()[2], i, 3);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
